{"ast":null,"code":"var _jsxFileName = \"/Users/jpek/Documents/GitHub/01-starting-project 6/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [emailFormatIsValid, setEmailFormatIsValid] = useState(false);\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueIsValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    valueIsValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.trim() !== '' && validateEmailFormat(value) === true);\n\n  const validateEmailFormat = value => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const result = regex.test(email);\n    return setEmailFormatIsValid(result);\n  };\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = e => {\n    validateEmailFormat(enteredEmail);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"/wjyfxJnXV4i+YVb3g2rZxgn97A=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","emailFormatIsValid","setEmailFormatIsValid","value","enteredName","hasError","nameInputHasError","valueIsValid","enteredNameIsValid","valueChangeHandler","nameChangeHandler","valueBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","emailInputHasError","enteredEmailIsValid","emailChangeHandler","emailBlurHandler","resetEmailInput","validateEmailFormat","regex","result","test","email","formIsValid","emailInputChangeHandler","e","formSubmissionHandler","preventDefault","nameInputClasses","emailInputClasses","emailInputIsInvalid"],"sources":["/Users/jpek/Documents/GitHub/01-starting-project 6/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\n\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = props => {\n  const [emailFormatIsValid, setEmailFormatIsValid] = useState(false);\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueIsValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    valueIsValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(\n    value => value.trim() !== '' && validateEmailFormat(value) === true\n  );\n\n  const validateEmailFormat = value => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const result = regex.test(email);\n    return setEmailFormatIsValid(result);\n  };\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = e => {\n    validateEmailFormat(enteredEmail);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = emailInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p className='error-text'>Invalid name.</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='name'>Email</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && <p className='error-text'>Invalid email.</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}