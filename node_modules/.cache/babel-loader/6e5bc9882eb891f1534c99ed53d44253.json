{"ast":null,"code":"var _jsxFileName = \"/Users/jpek/Downloads/01-starting-project 6/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const [enteredEmailIsFormatted, setEnteredEmailIsFormated] = useState(false);\n  const enteredInputIsValid = enteredName.trim() && enteredEmail.trim() !== '';\n  const nameInputIsInvalid = enteredName.trim() === '' && enteredNameTouched;\n  const emailInputIsInvalid = enteredEmail.trim() === \"\" && enteredEmailTouched && !enteredEmailIsFormatted;\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    emailValidator(enteredEmail);\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredInputIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  const emptyEmail = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-text\",\n    children: \"Email must not be empty.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 22\n  }, this);\n\n  const invalidEmailFormat = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-text\",\n    children: \"Please enter a valid Email.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 30\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"8edJqI7cDx8E8TiExN0LSZt5ofY=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsFormatted","setEnteredEmailIsFormated","enteredInputIsValid","trim","nameInputIsInvalid","emailInputIsInvalid","nameInputChangeHandler","e","target","value","emailInputChangeHandler","emailValidator","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses","emptyEmail","invalidEmailFormat","formIsValid"],"sources":["/Users/jpek/Downloads/01-starting-project 6/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = props => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const [enteredEmailIsFormatted, setEnteredEmailIsFormated] = useState(false);\n\n  const enteredInputIsValid = enteredName.trim() && enteredEmail.trim() !== '';\n  const nameInputIsInvalid = enteredName.trim() === '' && enteredNameTouched;\n  const emailInputIsInvalid = enteredEmail.trim() === \"\" && enteredEmailTouched && !enteredEmailIsFormatted;\n\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    emailValidator(enteredEmail);\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredInputIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = emailInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emptyEmail = <p className='error-text'>Email must not be empty.</p>;\n  const invalidEmailFormat = <p className='error-text'>Please enter a valid Email.</p>;\n  \n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className='error-text'>Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label>Email</label>\n        <input\n          type='text'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}