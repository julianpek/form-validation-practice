{"ast":null,"code":"var _jsxFileName = \"/Users/jpek/Documents/GitHub/01-starting-project 6/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueIsValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {} = useInput();\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const [emailFormatIsValid, setEmailFormatIsValid] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && emailFormatIsValid;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  const validateEmail = email => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const result = regex.test(email);\n    return setEmailFormatIsValid(result);\n  };\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    validateEmail(enteredEmail);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    resetNameInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"ZdEMqQVBjV4dhdjf4AeWZHLBCC0=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","valueIsValid","enteredNameIsValid","valueChangeHandler","nameChangeHandler","valueBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","emailFormatIsValid","setEmailFormatIsValid","enteredEmailIsValid","emailInputIsInvalid","validateEmail","email","regex","result","test","formIsValid","emailInputChangeHandler","e","target","emailInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","emailInputClasses"],"sources":["/Users/jpek/Documents/GitHub/01-starting-project 6/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\n\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = props => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueIsValid: enteredNameIsValid, \n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n\n  const {} = useInput()\n\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const [emailFormatIsValid, setEmailFormatIsValid] = useState(false);\n\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && emailFormatIsValid;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  const validateEmail = email => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const result = regex.test(email);\n    return setEmailFormatIsValid(result);\n  };\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  \n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    validateEmail(enteredEmail);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    resetNameInput();\n\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = emailInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p className='error-text'>Invalid name.</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='name'>Email</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && <p className='error-text'>Invalid email.</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}