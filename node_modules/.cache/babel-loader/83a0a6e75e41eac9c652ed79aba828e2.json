{"ast":null,"code":"var _jsxFileName = \"/Users/jpek/Documents/GitHub/01-starting-project 6/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const [emailFormatIsValid, setEmailFormatIsValid] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && emailFormatIsValid;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  const validateEmail = email => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const result = regex.test(email);\n    return setEmailFormatIsValid(result);\n  };\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    validateEmail(enteredEmail);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"nZxQ412cV/wDmIMnz6Bf1yWFxC8=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","isValid","enteredNameIsValid","valueChangeHandler","nameChangeHandler","valueBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","emailFormatIsValid","setEmailFormatIsValid","enteredEmailIsValid","emailInputIsInvalid","validateEmail","email","regex","result","test","formIsValid","nameInputChangeHandler","e","setEnteredName","target","nameInputBlurHandler","setEnteredNameTouched","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","nameInputIsInvalid","emailInputClasses"],"sources":["/Users/jpek/Documents/GitHub/01-starting-project 6/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\n\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = props => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid, \n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n  } = useInput(value => value.trim() !== '');\n\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const [emailFormatIsValid, setEmailFormatIsValid] = useState(false);\n\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && emailFormatIsValid;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  const validateEmail = email => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const result = regex.test(email);\n    return setEmailFormatIsValid(result);\n  };\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    validateEmail(enteredEmail);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = emailInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className='error-text'>Invalid name.</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='name'>Email</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && <p className='error-text'>Invalid email.</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}