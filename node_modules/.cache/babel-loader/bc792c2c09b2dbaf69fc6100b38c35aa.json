{"ast":null,"code":"var _jsxFileName = \"/Users/jpek/Downloads/01-starting-project 6/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const [formFormatIsValid, setFormFormatIsValid] = useState(false);\n  const noEmailEntered = enteredEmail.trim() === '' && enteredEmailTouched;\n  const nameInputIsInvalid = enteredName.trim() === '' && enteredNameTouched;\n  const emailInputIsInvalid = noEmailEntered || formFormatIsValid;\n  const enteredInputIsValid = !nameInputIsInvalid && emailInputIsInvalid;\n\n  const emailValidator = email => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const result = regex.test(email);\n\n    if (result) {\n      setFormFormatIsValid(true);\n    }\n\n    ;\n  };\n\n  let formIsValid = false;\n\n  if (enteredInputIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    emailValidator(enteredEmail);\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredInputIsValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = entered ? 'form-control invalid' : 'form-control';\n\n  const emptyEmailText = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-text\",\n    children: \"Please enter an email.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 26\n  }, this);\n\n  const invalidEmailFormatText = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-text\",\n    children: \"Email is invalid.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), noEmailEntered && emptyEmailText, !formFormatIsValid && enteredEmailTouched && invalidEmailFormatText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"cziZWzB7thiMXk8SimMbiC/z3VE=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","formFormatIsValid","setFormFormatIsValid","noEmailEntered","trim","nameInputIsInvalid","emailInputIsInvalid","enteredInputIsValid","emailValidator","email","regex","result","test","formIsValid","nameInputChangeHandler","e","target","value","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","emailInputClasses","entered","emptyEmailText","invalidEmailFormatText"],"sources":["/Users/jpek/Downloads/01-starting-project 6/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = props => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const [formFormatIsValid, setFormFormatIsValid] = useState(false);\n\n  const noEmailEntered = enteredEmail.trim() === '' && enteredEmailTouched;\n  const nameInputIsInvalid = enteredName.trim() === '' && enteredNameTouched;\n  const emailInputIsInvalid = noEmailEntered || formFormatIsValid;\n  const enteredInputIsValid = !nameInputIsInvalid && emailInputIsInvalid;\n\n  const emailValidator = email => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const result = regex.test(email);\n\n    if (result) {\n      setFormFormatIsValid(true);\n    };\n  };\n\n  let formIsValid = false;\n\n  if (enteredInputIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    emailValidator(enteredEmail);\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredInputIsValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = entered\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emptyEmailText = <p className='error-text'>Please enter an email.</p>;\n  const invalidEmailFormatText = (\n    <p className='error-text'>Email is invalid.</p>\n  );\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className='error-text'>Please enter a name.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label>Email</label>\n        <input\n          type='text'\n          id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {noEmailEntered && emptyEmailText}\n        {!formFormatIsValid && enteredEmailTouched && invalidEmailFormatText}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}